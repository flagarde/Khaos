---
  name: Windows

  on:
    push:
      branches: [main]
      paths-ignore:
        - '.github/workflows/**'
        - '!.github/workflows/Windows.yml'
    pull_request:
      paths-ignore:
        - '.github/workflows/**'
        - '!.github/workflows/Windows.yml'
    workflow_dispatch:

  concurrency:
    group: '${{ github.workflow }}@${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
    cancel-in-progress: true

  jobs:
    msvc-2019:
      runs-on: windows-2019
      name: 'msvc-2019 ${{ matrix.platform }} sdk:${{ matrix.sdk }} toolset:${{ matrix.toolset }}'
      strategy:
        fail-fast: false
        matrix:
          platform: [ win32, x64, ARM, ARM64]
          sdk: [ '10.0.14393.0', '10.0.16299.0', '10.0.17134.0', '10.0.17763.0', '10.0.18362.0', '10.0.19041.0', '10.0.20348.0', '10.0.22000.0', '10.0.22621.0']
          toolset: ['v140', 'v141', 'v142']

      steps:
        - uses: ammaraskar/msvc-problem-matcher@0.3.0

        - name: üì• Checkout
          uses: actions/checkout@v4

        - name: ‚¨áÔ∏è Setup CMake
          uses: lukka/get-cmake@latest
          with:
            cmakeVersion: ^3
            ninjaVersion: ^1

        - name: ‚¨áÔ∏è Setup MSVC
          uses: ilammy/msvc-dev-cmd@v1.13.0

        - name: ‚öôÔ∏è run-cmake (configure)
          uses: cmake-tools/run-cmake@v0-alpha
          id: 'configure'
          with:
            mode: configure
            generator: 'Visual Studio 16 2019'
            install_prefix: '../install'
            binary_dir: '../build'
            platform: ${{ matrix.platform }},version=${{ matrix.sdk }}
            toolset: ${{ matrix.toolset }}

    msvc-2022:
      runs-on: windows-2022
      name: 'msvc-2022 ${{ matrix.platform }} sdk:${{ matrix.sdk }} toolset:${{ matrix.toolset }}'
      strategy:
        fail-fast: false
        matrix:
          platform: [ win32, x64, ARM, ARM64]
          sdk: ['10.0.17763.0','10.0.19041.0','10.0.20348.0','10.0.22000.0','10.0.22621.0']
          toolset: ['v142', 'v143']

      steps:
        - uses: ammaraskar/msvc-problem-matcher@0.3.0

        - name: üì• Checkout
          uses: actions/checkout@v4

        - name: ‚¨áÔ∏è Setup CMake
          uses: lukka/get-cmake@latest
          with:
            cmakeVersion: ^3
            ninjaVersion: ^1

        - name: ‚¨áÔ∏è Setup MSVC
          uses: ilammy/msvc-dev-cmd@v1.13.0

        - name: ‚öôÔ∏è run-cmake (configure)
          uses: cmake-tools/run-cmake@v0-alpha
          id: 'configure'
          with:
            mode: configure
            generator: 'Visual Studio 17 2022'
            install_prefix: '../install'
            binary_dir: '../build'
            platform: ${{ matrix.platform }},version=${{ matrix.sdk }}
            toolset: ${{ matrix.toolset }}

    msys2:
      runs-on: windows-latest
      name: ${{ matrix.system }}
      strategy:
        fail-fast: false
        matrix:
        system: [ msys, mingw64, mingw32, ucrt64 , clang32, clang64, CLANGARM64]
      defaults:
        run:
          shell: msys2 {0}

      steps:
        - uses: ammaraskar/gcc-problem-matcher@0.3.0

        - name: üì• Checkout
          uses: actions/checkout@v4

        - name: ‚¨áÔ∏è Setup CMake
          uses: lukka/get-cmake@latest
          with:
            cmakeVersion: ^3
            ninjaVersion: ^1

        - name: ‚¨áÔ∏è Setup MSYS2
          uses: msys2/setup-msys2@v2
          with:
            msystem: ${{matrix.system}}
            path-type: minimal
            release: true
            update: true
            cache: true
            pacboy: >-
              cmake:p
              ninja:p

        - name: ‚öôÔ∏è run-cmake (configure)
          uses: cmake-tools/run-cmake@v0-alpha
          id: 'configure'
          with:
            mode: configure
            generator: 'Ninja Multi-Config'
            install_prefix: '../install'
            binary_dir: '../build'
